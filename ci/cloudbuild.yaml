# Copyright rig√©lblu inc.
# All rights reserved.
options:
  dynamic_substitutions: true

substitutions:
  _ARTIFACT: ${_ARTIFACT}
  _IMAGE_NAME: ${_ARTIFACT}/${PROJECT_ID}/${_SERVICE_NAME}/${_SERVICE_NAME}
  _SERVICE_NAME: ${_SERVICE_NAME}

# Build for Google Cloud Run
steps:
  # 0. Pull cached docker image
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: bash
    args:
      - '-c'
      - 'docker pull ${_IMAGE_NAME}:latest || exit 0'

  # 1. Build docker
  # OPTIMIZE: research if there's a better way to load all env variables
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_IMAGE_NAME}:latest'
      - '--cache-from'
      - '${_IMAGE_NAME}:latest'
      - '.'
      - '--build-arg'
      - 'NEXT_PUBLIC_ANALYTICS_ID'
      - '--build-arg'
      - 'NEXT_PUBLIC_STRIPE_PAYMENT_URL'
      - '--build-arg'
      - 'NODE_ENV'
    env:
      - 'NEXT_PUBLIC_ANALYTICS_ID=${_ENV_ANALYTICS_ID}'
      - 'NEXT_PUBLIC_STRIPE_PAYMENT_URL=${_ENV_STRIPE_PAYMENT_URL}'
      - 'NODE_ENV=${_ENV_NODE_ENV}'

  # 2. Push container to registery
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_IMAGE_NAME}:latest']

  # 3. Deploy container to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image'
      - '${_IMAGE_NAME}:latest'
      - '--region'
      - '${_REGION}'
      - '--min-instances=${_MIN_INSTANCES}'
      - '--max-instances=${_MAX_INSTANCES}'
      - '--allow-unauthenticated'
      - '--no-traffic'

  # 4. Add revision tags
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - run
      - services
      - update
      - ${_SERVICE_NAME}
      - --region
      - ${_REGION}
      - --tag=${_DEPLOY_TAG}
      - --tag=${_TRIGGER_REASON}
      - --tag=${_ENV_NODE_ENV}

  # 5. Sent traffic to latest based on _TRAFFIC_TO_LATEST
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [[ "${_TRAFFIC_TO_LATEST}" == "true" ]]
        then
          gcloud run services update-traffic ${_SERVICE_NAME} --region ${_REGION} --to-latest
        fi

# Used to tag cloud builds, so they can be filtered
tags:
  - '${_SERVICE_NAME}'
  - '${_TRIGGER_REASON}'
